/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_SIMPLE_PB_H_INCLUDED
#define PB_SIMPLE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Frame {
    pb_callback_t type;
    pb_size_t unicodeCharacters_count;
    uint32_t unicodeCharacters[10];
    uint32_t length;
} Frame;

typedef struct _FrameEntry {
    pb_callback_t key;
    bool has_value;
    Frame value;
} FrameEntry;

typedef struct _Device {
    pb_callback_t protocolVersion;
    pb_size_t frames_count;
    FrameEntry frames[3];
} Device;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Frame_init_default                       {{{NULL}, NULL}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0}
#define FrameEntry_init_default                  {{{NULL}, NULL}, false, Frame_init_default}
#define Device_init_default                      {{{NULL}, NULL}, 0, {FrameEntry_init_default, FrameEntry_init_default, FrameEntry_init_default}}
#define Frame_init_zero                          {{{NULL}, NULL}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0}
#define FrameEntry_init_zero                     {{{NULL}, NULL}, false, Frame_init_zero}
#define Device_init_zero                         {{{NULL}, NULL}, 0, {FrameEntry_init_zero, FrameEntry_init_zero, FrameEntry_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define Frame_type_tag                           1
#define Frame_unicodeCharacters_tag              2
#define Frame_length_tag                         3
#define FrameEntry_key_tag                       1
#define FrameEntry_value_tag                     2
#define Device_protocolVersion_tag               1
#define Device_frames_tag                        2

/* Struct field encoding specification for nanopb */
#define Frame_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   type,              1) \
X(a, STATIC,   REPEATED, UINT32,   unicodeCharacters,   2) \
X(a, STATIC,   SINGULAR, UINT32,   length,            3)
#define Frame_CALLBACK pb_default_field_callback
#define Frame_DEFAULT NULL

#define FrameEntry_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   key,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  value,             2)
#define FrameEntry_CALLBACK pb_default_field_callback
#define FrameEntry_DEFAULT NULL
#define FrameEntry_value_MSGTYPE Frame

#define Device_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   protocolVersion,   1) \
X(a, STATIC,   REPEATED, MESSAGE,  frames,            2)
#define Device_CALLBACK pb_default_field_callback
#define Device_DEFAULT NULL
#define Device_frames_MSGTYPE FrameEntry

extern const pb_msgdesc_t Frame_msg;
extern const pb_msgdesc_t FrameEntry_msg;
extern const pb_msgdesc_t Device_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Frame_fields &Frame_msg
#define FrameEntry_fields &FrameEntry_msg
#define Device_fields &Device_msg

/* Maximum encoded size of messages (where known) */
/* Frame_size depends on runtime parameters */
/* FrameEntry_size depends on runtime parameters */
/* Device_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
